ver1.0:
-Λαθος λογική, στο follow chain
-Μοναδική redfun

ver2.0:
+Σωστη λογική στο follow chain
+Συνολο απο redfuncs
-Λαθος στους υπολογισμους για τους χρόνους που εμφανίζονται (αρνητικοί)

ver2.1:
+Διορθώθηκε το λάθος στους αρνητικούς χρόνους, τώρα υπολογίζονται και τα "κρατούμενα"
-λανθασμένη λογική εφαρμογής μονο της πρώτης red-fun στην παραγωγή πινακα
-λανθασμένη λογική της εφαρμογής των red-fun με την σειρα στο ONLINE PART

ver3.0:
+Εφαρμογή όλων των red-funs με τη σειρά στην παραγωγή πίνακα
+Εφαρμογή των red-fun με αντίστροφη σειρά στο ONLINE PART απο την αρχή κάθε φορά
 και με την ορθή στην αναπαραγωγή της αλυσίδας αν βρεθεί HIT
+Ενσωμάτωση υπολογιστή πιθανότητας επιτυχίας σύμφωνα με την φόρμουλα του Oechslin

ver4.0:
+Δυνατότητα παραλληλοποίησης στην παραγωγή πίνακα
Τα αρχεία Leo/Desktop/Blake[Table|Chain]_2Mx500.txt εχουν παραχθεί απο αυτή την εκδοση για δοκιμές
(για αυτό η συγκεκριμένη εκδοση δεν αναπτύχθηκε περαιτέρω)

ver4.6:
+Διάσπαση της λειτουργικότητας παραγωγής πίνακα σε ξεχωριστό αρχείο για καλύτερη συντήρηση
+Βημα μετα-επεξεργασίας που διαγράφει όλες τις αλυσίδες με κοινά endpoints 
    ->δραματικά ποσοστά για το 1ο σύνολο red-funs (194/200.000 διαφορετικές!)
+Υλοποίηση 2ου, 3ου σύνολου απο red-funs

ver4.7
-Aντικατάσταση της rand/rand_r για τα startpoints κατα την δημιουργία πίνακα
 με την uniform_int_distribution με default (time/time+thread_id seed) generator
 απο την βιβλιοθήκη <random> του standard C++11.
-Υλοποίηση 4ου, 5ου συνόλου απο red-funs που χρησιμοποιούν την παραπάνω PRNG
    -> κανένα απο τα δύο ομως δεν παρουσιάζει καλύτερη εντροπία ή ταχύτητα απο το 3ο! 
-Προστασία αντικατάστασης υπαρχοντων αρχείων εξοδόυ
-Εξαντλητική απόρριψη+αναδημιουργία αλυσίδων μέχρι να μην υπάρχουν στον πίνακα.
-Μεταγλώττιση με -Ο3

ver4.8
-Μετατροπή του πίνακα σε Hashmap (std::unordered_map) κατα το Online Mode για ταχύτατες
 αναζητήσεις πολυπλοκότητας Ο(1) (στην μέση περίπτωση). Αποθηκευση ζευγων {endpoint,startpoint}. Υποστηρίζεται επίσης και η επιλογή του "load factor". 

